// Code generated by MockGen. DO NOT EDIT.
// Source: ./analytics/pubxai/queue/queue.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	queue "github.com/prebid/prebid-server/v2/analytics/pubxai/queue"
)

// MockQueueService is a mock of QueueService interface.
type MockQueueService struct {
	ctrl     *gomock.Controller
	recorder *MockQueueServiceMockRecorder
}

// MockQueueServiceMockRecorder is the mock recorder for MockQueueService.
type MockQueueServiceMockRecorder struct {
	mock *MockQueueService
}

// NewMockQueueService creates a new mock instance.
func NewMockQueueService(ctrl *gomock.Controller) *MockQueueService {
	mock := &MockQueueService{ctrl: ctrl}
	mock.recorder = &MockQueueServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockQueueService) EXPECT() *MockQueueServiceMockRecorder {
	return m.recorder
}

// Enqueue mocks base method.
func (m *MockQueueService) Enqueue(item queue.T) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Enqueue", item)
}

// Enqueue indicates an expected call of Enqueue.
func (mr *MockQueueServiceMockRecorder) Enqueue(item interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Enqueue", reflect.TypeOf((*MockQueueService)(nil).Enqueue), item)
}

// UpdateConfig mocks base method.
func (m *MockQueueService) UpdateConfig(bufferInterval, bufferSize string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "UpdateConfig", bufferInterval, bufferSize)
}

// UpdateConfig indicates an expected call of UpdateConfig.
func (mr *MockQueueServiceMockRecorder) UpdateConfig(bufferInterval, bufferSize interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateConfig", reflect.TypeOf((*MockQueueService)(nil).UpdateConfig), bufferInterval, bufferSize)
}
